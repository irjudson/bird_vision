[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bird-vision"
version = "0.1.0"
description = "Multi-modal bird identification with computer vision and audio analysis"
authors = [{name = "Your Name", email = "your.email@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "torch>=2.4.0",
    "torchvision>=0.19.0",
    "torchaudio>=2.4.0",
    "deeplake>=3.9.0",
    "timm>=1.0.0",
    "hydra-core>=1.3.2",
    "omegaconf>=2.3.0",
    "mlflow>=2.16.0",
    "wandb>=0.18.0",
    "albumentations>=1.4.0",
    "opencv-python>=4.10.0",
    "pillow>=10.4.0",
    "numpy>=1.26.0,<2.1.0",
    "pandas>=2.2.0",
    "scikit-learn>=1.5.0",
    "matplotlib>=3.9.0",
    "seaborn>=0.13.0",
    "rich>=13.8.0",
    "typer>=0.12.0",
    "pydantic>=2.9.0",
    "pydantic-settings>=2.5.0",
    "loguru>=0.7.2",
    "tensorboard>=2.17.0",
    "onnx>=1.16.0",
    "onnxruntime>=1.19.0",
    "openvino>=2024.4.0",
    "coremltools>=8.0.0",
    "tensorflow>=2.17.0",
    "ai-edge-litert>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "black>=24.8.0",
    "isort>=5.13.0",
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "pre-commit>=4.0.0",
    "jupyter>=1.1.0",
    "ipykernel>=6.29.0",
]
mobile = [
    "torch-mobile>=0.1.0",
    "torchscript>=1.0.0",
]
audio = [
    "librosa>=0.10.1",
    "soundfile>=0.12.1",
    "audioread>=3.0.1",
]
esp32 = [
    "thop>=0.1.1",  # For FLOPS calculation
    "platformio>=6.1.0",  # For ESP32 development
]
raspberry_pi = [
    # Raspberry Pi camera and hardware dependencies
    "picamera2>=0.3.0; platform_machine=='armv7l' or platform_machine=='aarch64'",
    "libcamera>=0.3.0; platform_machine=='armv7l' or platform_machine=='aarch64'",
    "rpi-gpio>=0.7.0; platform_machine=='armv7l' or platform_machine=='aarch64'",
    "pigpio>=1.78; platform_machine=='armv7l' or platform_machine=='aarch64'",
    # ARM-optimized ML libraries
    "onnxruntime>=1.19.0",
    "numpy>=1.26.0,<2.1.0",
    # Raspberry Pi OS utilities
    "psutil>=6.0.0",
    "GPUtil>=1.4.0",
]
tflite = [
    # TensorFlow Lite / LiteRT for mobile deployment
    "ai-edge-litert>=1.0.0",
    "ai-edge-torch>=0.1.0",  # For direct PyTorch to TFLite conversion
]

[project.scripts]
bird-vision = "bird_vision.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py310"
select = ["E", "F", "W", "C", "I", "N", "UP"]
ignore = ["E501", "W503"]

[tool.ruff.isort]
profile = "black"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=bird_vision --cov-report=term-missing"
testpaths = ["tests"]